'PartialPayments'.chapter()
'helper'.trashAll('*')
'helper'.simulateBrowserRefresh()
'stocktend_settings'.click()
  'Customer Payment Handling'.shouldEqual('Multiple Payments Per Invoice')
  'Customer Payment Handling'.enter('Manually Mark Invoices as Paid')
  'OK'.click()
'stocktend_customers'.click()
  'Add'.click()
    'Name'.enter('Fred Smith')
    'Password'.enter('secret')
    'Login'.enter('prfi_fred')
    'OK'.click()
  'mainTable./Fred Smith/.Account'.click()
    'Add Entry'.click()
      'AR Entry Number'.enter('INV01')
      'Entry Type'.enter('Invoice')
      'Amount'.enter('100.00')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_reports'.click()
  'mainTable./Unpaid Invoices/.Run'.click()
    'mainTable'.shouldHaveCount(2) // including total
    'mainTable.1.Amount'.shouldEqual('100.00')
    'mainTable.1.Amount Outstanding'.shouldEqual('100.00')
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Fred Smith/.Account'.click()
    'mainTable./INV01/.Edit'.click()
      'Paid'.shouldEqual('No')
      'Paid'.enter('Yes')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_reports'.click()
  'mainTable./Unpaid Invoices/.Run'.click()
    'mainTable'.shouldHaveCount(0)
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Fred Smith/.Account'.click()
    'mainTable./INV01/.Edit'.click()
      'Paid'.enter('No')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_settings'.click()
  'Customer Payment Handling'.shouldEqual('Manually Mark Invoices as Paid')
  'Customer Payment Handling'.enter('Multiple Payments Per Invoice')
  'OK'.click()
'stocktend_customers'.click()
  'mainTable./Fred Smith/.Account'.click()
    'mainTable./INV01/.Edit'.click()
      'Paid'.shouldBeReadOnly()
      'Enter Payment'.click()
        'AR Entry Number'.shouldEqual('INV01-P01')
        'Entry Type'.shouldEqual('Payment')
        'Invoice Being Paid'.shouldEqual('INV01')
        'Amount'.shouldEqual('100.00')
        'Amount'.enter('10.00')
        'OK'.click()
      'Payments'.click()
        'Payments for Invoice INV01'.shouldBeCurrentPage()
        'mainTable'.shouldHaveCount(2) // including total
        'mainTable./INV01-P01/.Edit'.click()
          'Amount'.enter('20.00')
          'OK'.click()
        'Back'.click()
      'Amount Outstanding'.shouldEqual('80.00')
      'Payments'.click()
        'mainTable./INV01-P01/.Trash'.click()
        'mainTable./INV01-P01/.Really Trash?'.click()
        'Back'.click()
      'Amount Outstanding'.shouldEqual('100.00')
      'OK'.click()
    'Add Entry'.click()
      'AR Entry Number'.enter('PAY01')
      'Entry Type'.enter('Payment')
      'Amount'.enter('10.00')
      'OK'.click()
      'stFormRejection'.shouldContain('Invoice is required')
      'Invoice Being Paid'.clickDropdown()
      'Invoice Being Paid'.shouldHaveNOptions(2) // including blank
      'Invoice Being Paid'.shouldHaveOption('INV01')
      'Invoice Being Paid'.enter('INV01')
      'Amount'.shouldEqual('100.00')
      'Amount'.enter('10.00')
      'Download PDF'.click()
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_reports'.click()
  'mainTable./Unpaid Invoices/.Run'.click()
    'mainTable'.shouldHaveCount(2) // including total
    'mainTable.1.Amount'.shouldEqual('100.00')
    'mainTable.1.Amount Outstanding'.shouldEqual('90.00')
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Fred Smith/.Account'.click()
    'mainTable./INV01/.Edit'.click()
      'Paid'.shouldEqual('No')
      'Amount Outstanding'.shouldEqual('90.00')
      'Amount Outstanding'.shouldBeReadOnly()
      'Payments'.click()
        'mainTable'.shouldHaveCount(2) // including total
        'Add'.click()
          'AR Entry Number'.shouldEqual('INV01-P01')
          'Entry Type'.shouldEqual('Payment')
          'Amount'.shouldEqual('90.00')
          'Amount'.enter('1.00')
          'OK'.click()
        'mainTable'.shouldHaveCount(3) // including total
        'Back'.click()
      'OK'.click()
    'Add Entry'.click()
      'AR Entry Number'.enter('CR01')
      'Entry Type'.enter('Credit Note')
      'Amount'.enter('89.00')
      'OK'.click()
    'mainTable./CR01/.Edit'.click()
      'Invoice Being Paid'.clickDropdown()
      'Invoice Being Paid'.shouldHaveNOptions(2)
      'Invoice Being Paid'.shouldHaveOption('INV01')
      'Invoice Being Paid'.enter('INV01')
      'OK'.click()
    'mainTable./INV01/.Edit'.click()
      'Paid'.shouldEqual('Yes')
      'Amount Outstanding'.shouldEqual('0.00')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_reports'.click()
  'mainTable./Unpaid Invoices/.Run'.click()
    'mainTable'.shouldHaveCount(0)
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Fred Smith/.Account'.click()
    'mainTable./INV01/.Edit'.click()
      'Payments'.click()
        'mainTable.1.Trash'.click()
        'mainTable.1.Really Trash?'.click()
        'mainTable.1.Trash'.click()
        'mainTable.1.Really Trash?'.click()
        'mainTable.1.Trash'.click()
        'mainTable.1.Really Trash?'.click()
        'Back'.click()
      'Paid'.shouldEqual('No')
      'Amount Outstanding'.shouldEqual('100.00')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_reports'.click()
  'mainTable./Unpaid Invoices/.Run'.click()
    'mainTable'.shouldHaveCount(2) // including total
    'Back'.click()
  'Back'.click()
'AddCustomer'.chapter()
'helper'.trashAll('*')
'helper'.simulateBrowserRefresh()
'stocktend_customers'.click()
  'Add'.click()
    'Add Customer'.shouldBeCurrentPage()
    'Customer ID'.shouldntExist()
    'Name'.enter('Fred Smith')
    'Offline Only'.shouldEqual('No')
    'OK'.click()
    'stFormRejection'.shouldContain('Password is required')
    'Password'.enter('secret')
    'OK'.click()
    'stFormRejection'.shouldContain('You must enter a Login')
    'Login'.enter('prfi_fred')
    'OK'.click()
  'Add'.click()
    'Name'.enter('Adam Ant')
    'Offline Only'.enter('Yes')
    'Login'.shouldntExist()
    'Password'.shouldntExist()
    'OK'.click()
  'mainTable./Adam Ant/.Edit'.click()
    'Offline Only'.shouldEqual('Yes')
    'Login'.shouldntExist()
    'OK'.click()
  'mainTable./Fred Smith/.Edit'.click()
    'Edit Customer'.shouldBeCurrentPage()
    'Customer ID'.shouldExist()
    'Login'.shouldEqual('prfi_fred')
    'Name'.enter('Fred Jones')
    'Password'.shouldEqual('')
    'Password'.enter('secret2') 
    'Nice Name'.enter('Freddy')
    'Email'.enter('a@b.c')
    'URL'.enter('http://hello')
    'Billing'.usePanel()
      'First Name'.enter('Fred')
      'Last Name'.enter('Jones')
      'Company'.enter('Fred Inc.')
      'Address'.enter('1 One Way')
      'Address 2'.enter('Fitzroy')
      'City'.enter('Melbourne')
      'State'.enter('VIC')
      'Postal Code'.enter('3000')
      'Country'.enter('Australia')
      'Phone'.enter('123')
      'Email'.enter('bill@b.c')
      'Billing'.stopUsingPanel()
    'Shipping'.usePanel()
      'First Name'.enter('Fred-s')
      'Last Name'.enter('Jones-s')
      'Company'.enter('Fred Inc.-s')
      'Address'.enter('1 One Way-s')
      'Address 2'.enter('Fitzroy-s')
      'City'.enter('Melbourne-s')
      'State'.enter('VIC')
      'Postal Code'.enter('3000')
      'Country'.enter('Australia')
      'Shipping'.stopUsingPanel()
    'OK'.click()
  'Back'.click()
'helper'.simulateBrowserRefresh()
'stocktend_customers'.click()
  'searcher'.enter('Fred')
  'mainTable./Fred Jones/.Edit'.click()
    'Email'.shouldEqual('a@b.c')
    'Billing'.usePanel()
      'Company'.shouldEqual('Fred Inc.')
      'Billing'.stopUsingPanel()
    'Shipping'.usePanel()
      'Address'.shouldEqual('1 One Way-s')
      'Country'.shouldEqual('Australia')
      'Shipping'.stopUsingPanel()
    'OK'.click()
  'mainTable./Fred Jones/.Trash'.click()
  'mainTable./Fred Jones/.Really Trash?'.click()
  'Back'.click()
'helper'.simulateBrowserRefresh()
'stocktend_customers'.click()
  'mainTable./Fred Jones/.Edit'.shouldntExist()
  'Add'.click()
    'Login'.enter('prfi_fred')
    'Name'.enter('Fred Smith')
    'Password'.enter('secret')
    'OK'.click()
  'mainTable./Fred Smith/.Edit'.click()
    'Login'.shouldBeReadOnly()
    'Password'.enter('secret2')
    'OK'.click()
  'Back'.click()
'1'.chapter()
'helper'.clearWCOrders()
'helper'.trashAll('*')
'helper'.clearWCStockLevels()
'helper'.setWCStockLevel('Big Bag (BB01)', 500)
'helper'.setWCStockLevel('Cap (C01)', 500)
'helper'.simulateBrowserRefresh()
'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPriceExclTax: 181.82, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Ajax', customer: 'Kevin Costly'});
'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPriceExclTax: 181.82, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Centrelink 1', customer: 'Johnny Appleseed'});
'helper'.addWCOrder({product: 'Cap (C01)', quantity: 100, unitPriceExclTax: 181.82, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Centrelink 1', customer: 'Johnny Appleseed'});
'Fulfillment'.click()
  'mainTable.<columnHeadings>.Order'.click()
  'mainTable.1.Edit'.click()
    'Lines.0.Quantity Shipped'.enter('50')
    'OK'.click()
  'mainTable.2.Edit'.click()
    'Lines.0.Quantity Shipped'.enter('60')
    'OK'.click()
  'View Shipments'.click()
    'mainTable'.shouldHaveCount(2)
    'mainTable.0.Edit'.click()
      'Create Invoice'.click()
        'AR Entry Number'.enter('TESTINV01')
        'Amount'.shouldEqual('10000.10')
        'OK'.click()
      'OK'.click()
    'mainTable.1.Edit'.click()
      'Create Invoice'.click()
        'AR Entry Number'.enter('TESTINV02')
        'OK'.click()
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Balance'.shouldEqual('-22,000.22')
    'Back'.click()
  'Back'.click()
'helper'.simulatePayment({invoiceNumber: 'TESTINV01', customerDisplayName: 'Johnny Appleseed'})
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Balance'.shouldEqual('-12,000.12')
    'mainTable'.shouldHaveCount(3)
    'mainTable./TESTINV01/.Amount'.shouldEqual('-10,000.10')
    'mainTable./TESTINV02/.Amount'.shouldEqual('-12,000.12')
    'mainTable./TESTINV01/.Edit'.click()
      'Paid'.shouldEqual('Yes')
      'OK'.click()
    'mainTable./TESTINV01-PAY/.Amount'.shouldEqual('10,000.10')
    'Back'.click()
  'Back'.click()
'2'.chapter()
'helper'.clearWCOrders()
'helper'.trashAll('*')
'helper'.clearWCStockLevels()
'helper'.simulateBrowserRefresh()
'helper'.setWCStockLevel('Big Bag (BB01)', 500)
'helper'.setWCStockLevel('Cap (C01)', 500)
'helper'.simulateBrowserRefresh()
'Sales and Invoices'.click()
  'Preorders'.click()
    'Add'.click()
      'Customer'.enter('Fester Inc (johnny.appleseed)')
      'Add Line'.click()
        'Product'.enter('Big Bag (BB01)')
        'Unit Price (Inc Tax)'.enter('200')
        'Add another line'.click()
        'Line Type'.enter('Fee')
        'Shipping Method'.shouldntExist()
        'Unit Price (Inc Tax)'.enter('20')
        'Add another line'.click()
        'Line Type'.enter('Shipping')
        'OK'.click()
        'stFormRejection'.shouldContain('Shipping Method is required')
        'Unit Price (Inc Tax)'.shouldEqual('0.00')
        'Shipping Method'.clickDropdown()
        'Shipping Method'.shouldHaveNOptions(4) // counting blank
        'Shipping Method'.shouldHaveOption('Australia et al: Flat rate')
        'Shipping Method'.chooseOption('Australia et al: Flat rate')
        'Unit Price (Inc Tax)'.shouldEqual('25.67')
        'Unit Price (Inc Tax)'.enter('33')
        'Tax %'.enter('10') // NOTE: need this so that our calculation matches the native WC calculation.  We need to emulate this at some point.
        'OK'.click()
      'Convert to WC Order'.click()
        'messageDialogText'.shouldEqual("Are you sure you want to convert this Preorder to a WC order?", 'doc')
        'Yes'.click('doc')
        'messageDialogText'.shouldEqual("New WC Order was created", 'doc')
        'OK'.click('doc')
    'Preorders'.shouldBeCurrentPage()
    'Back'.click()
  'mainTable.0.View Order'.click()
    'Fees'.shouldEqual('20.00')
    'Shipping'.shouldEqual('30.00')
    'Lines./Fee/.Amount Inc Tax'.shouldEqual('20.00')
    'Lines./Shipping/.Amount Inc Tax'.shouldEqual('33.00')
    'Back'.click()
  'Manage Orders'.click()
    'mainTable.0.Edit'.click()
      'Lines./Shipping/.Edit'.click()
        'Shipping Method'.shouldEqual('Australia et al: Flat rate')
        'OK'.click()
      'OK'.click()
    'Back'.click()
  'mainTable'.shouldHaveCount(1)
  'Manage Orders'.click()
    'mainTable.0.Trash'.click()
    'mainTable.0.Really Trash?'.click()
    'Back'.click()
  'mainTable'.shouldHaveCount(0)
  'Back'.click()
'stocktend_settings'.click()
  'Imposts'.click()
    'Add'.click()
      'Add Impost'.shouldBeCurrentPage()
      'Javascript Function To Calculate Impost'.shouldContain('(product, quantity) => {')
      'Javascript Function To Calculate Impost'.shouldContain(' return 0')
      'Javascript Function To Calculate Impost'.shouldContain('}')
      'OK'.click()
      'stFormRejection'.shouldContain('Customer Meta Field Name is required')
      'Customer Meta Field Name'.enter('registered chemtax')
      'Add Classifier'.click()
      'stFormRejection'.shouldContain('You must enter a Description')
      'Description'.enter('Chemtax')
      'Add Classifier'.click()
      'stFormRejection'.shouldContain('Customer Meta Field Name cannot contain spaces')
      'Customer Meta Field Name'.enter('registered_chemtax')
      'Add Classifier'.click()
        'Add Classifier'.shouldBeCurrentPage()
        'Impost'.shouldBeReadOnly()
        'Impost'.shouldEqual('Chemtax')
        'OK'.click()
        'stFormRejection'.shouldContain('Description is required')
        'Classifier Description'.enter('Type')
        'OK'.click()
        'stFormRejection'.shouldContain('Product Meta Field Name is required')
        'Product Meta Field Name'.enter('kemikalieskatt type')
        'Add another'.click()
        'stFormRejection'.shouldContain('Product Meta Field Name cannot contain spaces')
        'Product Meta Field Name'.enter('kemikalieskatt_type')
        'Default Value'.enter('Whitegoods')
        'Add Classification'.click()
          'Add Classification'.shouldBeCurrentPage()
          'Impost'.shouldBeReadOnly()
          'Impost'.shouldEqual('Chemtax')
          'Classifier'.shouldBeReadOnly()
          'Classifier'.shouldEqual('Type')
          'OK'.click()
          'stFormRejection'.shouldContain('Classification Value is required')
          'Classification Value'.enter('Whitegoods')
          'Add another'.click()
          'Classification Value'.enter('Other')
          'OK'.click()
        'Classifications'.shouldHaveCount(2)
        'Add another'.click()
        'Impost'.shouldEqual('Chemtax')
        'Classifier Description'.enter('Discount')
        'Product Meta Field Name'.enter('kemikalieskatt_discount')
        'Default Value'.enter('50')
        'Add Classification'.click()
          'Classification Value'.enter('0')
          'Add another'.click()
          'Classification Value'.enter('50')
          'Add another'.click()
          'Classification Value'.enter('90')
          'OK'.click()
        'OK'.click()
      'Javascript Function To Calculate Impost'.shouldContain('(product, quantity) => {')
      'Javascript Function To Calculate Impost'.shouldContain('  // Classification Fields:')
      'Javascript Function To Calculate Impost'.shouldContain('  // product.kemikalieskatt_discount')
      'Javascript Function To Calculate Impost'.shouldContain('  // product.kemikalieskatt_type')
      'Javascript Function To Calculate Impost'.removeInputLine(5)
      'Javascript Function To Calculate Impost'.removeInputLine(4)
      'Javascript Function To Calculate Impost'.addLine("  let rates = { ")
      'Javascript Function To Calculate Impost'.addLine("    'Whitegoods': {")
      'Javascript Function To Calculate Impost'.addLine("      maxWeight: 9999999,")
      'Javascript Function To Calculate Impost'.addLine("      maxCharge: 9999999,")
      'Javascript Function To Calculate Impost'.addLine("      rate: 11")
      'Javascript Function To Calculate Impost'.addLine("    },")
      'Javascript Function To Calculate Impost'.addLine("    'Other': {")
      'Javascript Function To Calculate Impost'.addLine("      maxWeight: 3,")
      'Javascript Function To Calculate Impost'.addLine("      maxCharge: 451,")
      'Javascript Function To Calculate Impost'.addLine("      rate: 164")
      'Javascript Function To Calculate Impost'.addLine("    }")
      'Javascript Function To Calculate Impost'.addLine("  }")
      'Javascript Function To Calculate Impost'.addLine("  let rateObj = rates[product.kemikalieskatt_type]; if ( ! rateObj ) return 0")
      'Javascript Function To Calculate Impost'.addLine("  let weight = product.weight * quantity")
      'Javascript Function To Calculate Impost'.addLine("  let baseCharge = ")
      'Javascript Function To Calculate Impost'.addLine("    (weight >= rateObj.maxWeight) ")
      'Javascript Function To Calculate Impost'.addLine("      ? rateObj.maxCharge ")
      'Javascript Function To Calculate Impost'.addLine("      : rateObj.rate * weight")
      'Javascript Function To Calculate Impost'.addLine("  let multiplier = parseFloat(product.kemikalieskatt_discount, 10) / 100")
      'Javascript Function To Calculate Impost'.addLine("  let charge = baseCharge * multiplier")
      'Javascript Function To Calculate Impost'.addLine("  charge = Math.round((charge + Number.EPSILON) * 100) / 100 // round to 2 decimals")
      'Javascript Function To Calculate Impost'.addLine("  return charge")
      'Javascript Function To Calculate Impost'.addLine("}")
      'OK'.click()
    'mainTable'.shouldHaveCount(1)
    'Add'.click()
      'Description'.enter('CopySwede')
      'Customer Meta Field Name'.enter('registered_copyswede')
      'Add Classifier'.click()
        'Classifier Description'.enter('Type')
        'Product Meta Field Name'.enter('copyswede_type')
        'Default Value'.enter('Internal')
        'Add Classification'.click()
          'Classification Value'.enter('Internal')
          'Add another'.click()
          'Classification Value'.enter('External')
          'OK'.click()
        'OK'.click()
      'OK'.click()
    'Back'.click()
  'Auto-complete WC Orders When Fulfilled'.enter('Yes')
  'Automatically Email Invoices'.enter('Yes')
  'OK'.click()
'stocktend_customers'.click()
  'mainTable./Kevin Costly/.Edit'.click()
    'Apply Chemtax Impost'.shouldEqual('Yes')
    'Apply CopySwede Impost'.enter('No')
    'OK'.click()
  'Back'.click()
'stocktend_inventory'.click()
  'mainTable./Cap (C01)/.Edit Product'.click()
    'Chemtax Type'.shouldEqual('Whitegoods')
    'Chemtax Type'.clickDropdown()
    'Chemtax Type'.shouldHaveNOptions(3) // counting blank
    'Chemtax Type'.shouldHaveOption('Whitegoods')
    'Chemtax Type'.enter('Whitegoods')
    'Chemtax Discount'.shouldEqual('50')
    'CopySwede Type'.shouldEqual('Internal')
    'OK'.click()
  'mainTable./Cap (C01)/.Edit Product'.click()
    'Chemtax Type'.shouldEqual('Whitegoods')
    'OK'.click()
  'mainTable./Corn Flakes (CF01)/.Edit Product'.click()
    'Chemtax Type'.enter('Other')
    'Chemtax Discount'.enter('90')
  'Back'.click()
'Sales and Invoices'.click()
  'Preorders'.click()
    'Add'.click()
      'Customer'.enter('Fester Inc (johnny.appleseed)')
      'Add Line'.click()
        'Product'.enter('Corn Flakes (CF01)')
        'Quantity'.enter('2')
        'Unit Price (Inc Tax)'.enter('200')
        'Tax %'.enter('10')
        'Add another line'.click()
        'Product'.enter('Cap (C01)')
        'Quantity'.enter('10')
        'Unit Price (Inc Tax)'.enter('30')
        'Tax %'.enter('10')
        'OK'.click()
      'Lines'.shouldHaveCount(4)
      'Lines.0.Description'.shouldEqual('Corn Flakes (CF01)')
      'Lines.1.Description'.shouldEqual('Corn Flakes (CF01) - Chemtax')
      'Lines.2.Description'.shouldEqual('Cap (C01)')
      'Lines.3.Description'.shouldEqual('Cap (C01) - Chemtax')
      'Lines.3.Line Total (Inc Tax)'.shouldEqual('275.00')
      'Lines.2.Edit'.click()
        'Quantity'.enter('20')
        'OK'.click()
      'Lines.3.Line Total (Inc Tax)'.shouldEqual('550.00')
      'Lines.2.Quantity'.enter('40')
      'Lines.3.Line Total (Inc Tax)'.shouldEqual('1,100.00')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Kevin Costly/.Account'.click()
    'Customer AR Details'.click()
      'Payment Terms'.shouldEqual('30 Days')
      'Payment Terms'.clickDropdown()
      'Payment Terms'.shouldHaveOption('1 Day')
      'Payment Terms'.shouldHaveOption('60 Days')
      'Payment Terms'.shouldHaveOption('90 Days')
      'Payment Terms'.enter('1 Day')
      'OK'.click()
    'Back'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Customer AR Details'.click()
      'Payment Terms'.enter('90 Days')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Ajax', customer: 'Kevin Costly', feesIncTax: 1.00, shippingIncTax: 1.00, methodName: 'Australia et al: Local pickup'});
'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Centrelink 1', customer: 'Johnny Appleseed', shipmentMethod: 'Shipping Carrier', shippingIncTax: 20.00, feesIncTax: 1.00});
'helper'.addWCOrder({product: 'Cap (C01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Centrelink 2', customer: 'Johnny Appleseed', feesIncTax: 1.00, shippingIncTax: 1.00, methodName: 'Australia et al: Local pickup'});
'stocktend_inventory'.click()
  'mainTable./Cap (C01)/.Edit Product'.click()
    'Chemtax Discount'.shouldEqual('50')
    'OK'.click()
  'Back'.click()
'Fulfillment'.click()
  'mainTable./Warehouse of Ajax/.Edit'.click()
    'Lines.0.Quantity Shipped'.enter('100')
    'Shipment Method'.shouldEqual('Local Pickup')
    'Fulfill Stage'.shouldEqual('Waiting for Pickup')
    'WC Order Status'.shouldEqual('Processing')
    'OK'.click()
  'mainTable./Warehouse of Centrelink 2/.Edit'.click()
    'Lines.0.Quantity Shipped'.enter('100')
    'Shipment Method'.shouldEqual('Local Pickup')
    'Fulfill Stage'.shouldEqual('Waiting for Pickup')
    'WC Order Status'.shouldEqual('Processing')
    'OK'.click()
  'View Shipments'.click()
    'mainTable'.shouldHaveCount(2)
    'mainTable./Warehouse of Ajax/.Local Pickup'.shouldEqual('Yes')
    'mainTable./Warehouse of Ajax/.Picked Up'.shouldEqual('No')
    'mainTable./Warehouse of Centrelink 2/.Local Pickup'.shouldEqual('Yes')
    'mainTable./Warehouse of Ajax/.Picked Up'.shouldEqual('No')
    'mainTable./Warehouse of Ajax/.Edit'.click()
      'Create Invoice'.shouldntExist()
      'Invoiced'.shouldntExist()
      'Picked Up'.enter('Yes')
      'Create Invoice'.shouldExist()
      'Invoiced'.shouldExist()
      'OK'.click()
    'Back'.click()
  'Back'.click()
'Fulfillment'.click()
  'mainTable./Warehouse of Centrelink 2/.Edit'.click()
    'Fulfill Stage'.shouldEqual('Waiting for Pickup')
    'WC Order Status'.shouldEqual('Processing')
    'Fulfill Stage'.enter('Shipped')
    'WC Order Status'.shouldEqual('Completed')
    'OK'.click()
  'View Shipments'.click()
    'mainTable'.shouldHaveCount(2)
    'mainTable./Warehouse of Centrelink 2/.Picked Up'.shouldEqual('Yes')
    'mainTable./Warehouse of Centrelink 2/.Edit'.click()
      'Invoiced'.shouldEqual('No')
      'View Invoice'.shouldntExist()
      'Create Invoice'.click()
        'Edit AR Entry'.shouldBeCurrentPage()
        'Amount'.shouldEqual('20002.20')
        'Due Date'.shouldEqualExpression('global.todayLocal().incDays(90)')
        'Paid'.shouldEqual('No')
        'Emailed'.shouldEqual('Yes')
        'Email Date'.shouldEqualExpression('global.todayLocal().toLocalMMMDY()')
        'Email Address'.shouldEqual('i.am.paul.andrews+3@gmail.com')
        'Emailed'.shouldBeReadOnly()
        'Email Date'.shouldBeReadOnly()
        'Download PDF'.click()
        'Back'.click()
      'Invoiced'.shouldEqual('Yes')
      'Create Invoice'.shouldntExist()
      'OK'.click()
    'Back'.click()
  'Back'.click()
'3'.chapter()
'helper'.clearWCOrders()
'helper'.trashAll('SO')
'helper'.trashAll('SOLine')
'helper'.trashAll('Inventory')
'helper'.trashAll('Location')
'helper'.trashAll('Configuration')
'helper'.trashAll('Template')
'helper'.trashAll('Cluster')
'helper'.trashAll('Bundle')
'helper'.trashAll('Preempt')
'helper'.trashAll('POReceipt')
'helper'.trashAll('PO')
'helper'.trashAll('Lot')
'helper'.trashAll('Allotment')
'helper'.trashAll('Allocation')
'helper'.trashAll('AllocationLine')
'helper'.trashAll('SOShipment')
'helper'.trashAll('SOShipmentLine')
'helper'.trashAll('Credit')
'helper'.trashAll('Debtor')
'helper'.trashAll('Preorder')
'helper'.trashAll('NextNumber')
'helper'.trashAll('Impost')
'helper'.trashAll('Clue')
'helper'.clearWCStockLevels()
'helper'.simulateBrowserRefresh()
'stocktend_settings'.click()
  'Log Changes To Stock For Problem Diagnosis'.enter('Yes')
  'OK'.click()
'Sales and Invoices'.click()
  'Preorders'.click()
    'Preorders'.shouldBeCurrentPage()
    'mainTable'.shouldHaveCount(0)
    'Add'.click()
      'Add Preorder'.shouldBeCurrentPage()
      'Preorder Number'.shouldEqual('PR00001')
      'Order Date'.shouldEqualExpression('global.todayLocal()')
      'Customer'.clickDropdown()
      'Customer'.shouldHaveOption('Fester Inc (johnny.appleseed)')
      'Customer'.chooseOption('Fester Inc (johnny.appleseed)')
      'Disposition'.clickDropdown()
      'Disposition'.shouldHaveOption('Firm')
      'Disposition'.shouldHaveOption('Forecast Only')
      'Disposition'.shouldEqual('Firm')
      "Customer Reference".enter('JA01')
      'Requested ETA Date'.shouldEqual('')
      'Requested ETA Date'.enterExpression('global.todayLocal().incDays(30)')
      'Order Total (Inc Tax)'.shouldEqual('0.00')
      'Tax'.shouldEqual('0.00')
      'Lines'.shouldHaveCount(0)
      'Add Line'.click()
        'Add Preorder Line'.shouldBeCurrentPage()
        'Preorder Number'.shouldEqual('PR00001')
        'Line Type'.shouldEqual('Product')
        'Line Type'.clickDropdown()
        'Line Type'.shouldHaveOption('Product')
        'Line Type'.shouldHaveOption('Fee')
        'Line Type'.shouldHaveOption('Shipping')
        'Product'.enter('Big Bag (BB01)')
        'Description'.shouldEqual('Big Bag')
        'Description'.enter('Big Bag Test')
        'Quantity'.shouldEqual('1')
        'Quantity'.enter('100')
        'Unit Price (Inc Tax)'.enter('200')
        'Tax %'.enter('10')
        'Line Total (Inc Tax)'.shouldEqual('20,000.00')
        'Line Total (Inc Tax)'.shouldBeReadOnly()
        'Line Tax'.shouldEqual('1,818.18')
        'Line Tax'.shouldBeReadOnly()
        'Add another line'.click()
        'Product'.enter('Cap (C01)')
        'Quantity'.enter('99')
        'Unit Price (Inc Tax)'.enter('199')
        'Tax %'.enter('10')
        'Add another line'.click()
        'Product'.enter('Hoodie (H01)')
        'Quantity'.enter('99')
        'Unit Price (Inc Tax)'.enter('199')
        'Tax %'.enter('10')
        'Add another line'.click()
        'Line Type'.enter('Shipping')
        'Shipping Method'.enter('Australia et al: Flat rate')
        'Product'.shouldntExist()
        'Quantity'.shouldEqual('1')
        'Unit Price (Inc Tax)'.enter('2')
        'Tax %'.enter('10')
        'Add another line'.click()
        'Line Type'.enter('Fee')
        'Product'.shouldntExist()
        'Unit Price (Inc Tax)'.enter('3')
        'Tax %'.enter('10')
        'OK'.click()
      'Lines'.shouldHaveCount(5)
      'Lines./Big Bag Test (BB01)/.SKU'.shouldEqual('BB01')
      'Lines./Big Bag Test (BB01)/.Quantity'.shouldEqual('100')
      'Lines./Big Bag Test (BB01)/.Unit Price (Inc Tax)'.shouldEqual('200.00')
      'Lines./Big Bag Test (BB01)/.Line Total (Inc Tax)'.shouldEqual('20,000.00')
      'Lines./Cap (C01)/.Quantity'.enter('101')
      'Lines./Cap (C01)/.Unit Price (Inc Tax)'.enter('200')
      'Lines./Hoodie (H01)/.Trash'.click()
      'Lines./Hoodie (H01)/.Really Trash?'.click()
      'Lines'.shouldHaveCount(4)
      'Lines./Cap (C01)/.Edit'.click()
        'Edit Preorder Line'.shouldBeCurrentPage()
        'Quantity'.shouldEqual('101')
        'Quantity'.enter('100')
        'OK'.click()
      'Lines./Cap (C01)/.Quantity'.shouldEqual('100')
      'OK'.click()
    'Inventory'.click()
      'Customize'.click()
        'Add Field'.click()
          'Get Value From'.enter('Inventory.quantityOnFirmPreorders')
          'Caption'.enter('Preorders')
          'Display As'.enter('Number')
          'Minimum Decimals'.enter(0)
          'Maximum Decimals'.enter(0)
          'OK'.click()
        'OK'.click()
      'mainTable./Big Bag (BB01)/.Preorders'.shouldEqual('100')
      'Back'.click()
    'helper'.checkWCStockLevel('Big Bag (BB01)', 0, "frontend")
    'Settings'.click()
      'Deduct Firm Preorders From WC Stock Level'.shouldEqual('No')
      'Deduct Firm Preorders From WC Stock Level'.enter('Yes')
      'OK'.click()
    'Settings'.click()
      'Deduct Firm Preorders From WC Stock Level'.shouldEqual('Yes')
      'OK'.click()
    'helper'.checkWCStockLevel('Big Bag (BB01)', -100, "frontend")
    'Add'.click()
      'Preorder Number'.shouldEqual('PR00002')
      'Customer'.enter('Fester Inc (kevin.costly)')
      'Add Line'.click()
        'Product'.enter('Big Bag (BB01)')
        'Quantity'.enter('100')
        'Unit Price (Inc Tax)'.enter('200')
        'Tax %'.enter('10')
        'Add another line'.click()
        'Product'.enter('Cap (C01)')
        'Quantity'.enter('100')
        'Unit Price (Inc Tax)'.enter('200')
        'Tax %'.enter('10')
        'OK'.click()
      'OK'.click()
    'helper'.checkWCStockLevel('Big Bag (BB01)', -200, "frontend")
    'mainTable./PR00002/.Edit'.click()
      'Disposition'.enter('Forecast Only')
      'OK'.click()
    'helper'.checkWCStockLevel('Big Bag (BB01)', -100, "frontend")
    'mainTable./PR00002/.Edit'.click()
      'Disposition'.enter('Firm')
      'OK'.click()
    'Add'.click()
      'Preorder Number'.shouldEqual('PR00003')
      'Customer'.enter('Fester Inc (kevin.costly)')
      'Disposition'.enter('Forecast Only')
      'Add Line'.click()
        'Product'.enter('Big Bag (BB01)')
        'Quantity'.enter('100')
        'Unit Price (Inc Tax)'.enter('200')
        'Tax %'.enter('10')
        'OK'.click()
      'OK'.click()
    'helper'.checkWCStockLevel('Big Bag (BB01)', -200, "frontend")
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.AR Balance'.shouldEqual('0.00')
  'mainTable./Johnny Appleseed/.Credit Limit'.shouldEqual('0.00')
  'mainTable./Johnny Appleseed/.Edit'.click()
    'Account'.click()
      'AR Account'.shouldBeCurrentPage()
      'Customer'.shouldEqual('Fester Inc (johnny.appleseed)')
      'Balance'.shouldEqual('0.00')
      'mainTable'.shouldHaveCount(0)
      'Add Entry'.click()
        'Add AR Entry'.shouldBeCurrentPage()
        'Customer'.shouldEqual('Fester Inc (johnny.appleseed)')
        'Customer'.shouldBeReadOnly()
        'Entry Type'.shouldEqual('')
        'OK'.click()
        'Entry Type'.enter('Prepayment')
        'Amount'.enter('5000.00')
        'Notes'.enter('To cover July')
        'OK'.click()
      'mainTable'.shouldHaveCount(1)
      'Balance'.shouldEqual('5,000.00')
      'Customer AR Details'.click()
        'Edit Customer AR Details'.shouldBeCurrentPage()
        'Name'.shouldEqual('Fester Inc (johnny.appleseed)')
        'Name'.shouldBeReadOnly()
        'Credit Limit'.enter('35005.40')
        'Balance'.shouldEqual('5,000.00')
        'Balance'.shouldBeReadOnly()
        'OK'.click()
      'Balance'.shouldEqual('5,000.00')
      'Balance'.shouldBeReadOnly()
      'Back'.click()
    'Back'.click()
  'mainTable./Kevin Costly/.Account'.click()
    'mainTable'.shouldHaveCount(0)
    'Customer AR Details'.click()
      'Credit Limit'.enter('10000.00')
      'OK'.click()
    'Add Entry'.click()
      'Entry Type'.enter('Prepayment')
      'Amount'.enter('20000.00')
      'OK'.click()
    'Back'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'AR Account'.shouldBeCurrentPage()
    'Customer'.shouldEqual('Fester Inc (johnny.appleseed)')
    'Balance'.shouldEqual('5,000.00')
    'mainTable'.shouldHaveCount(1)
    'Add Entry'.click()
      'Entry Type'.enter('Credit Note')
      'Amount'.enter('450')
      'OK'.click()
    'Balance'.shouldEqual('5,450.00')
    'mainTable./Credit Note/.Trash'.click()
    'mainTable./Credit Note/.Really Trash?'.click()
    'Balance'.shouldEqual('5,000.00')
    'Back'.click()
  'Back'.click()
'stocktend_purchaseOrders'.click()
  'Add'.click()
    'Purchase Order Number'.enter('PO-GEN-01')
    'Expected Delivery Date'.enter('3/10/2021')
    'Add Line'.click()
      'Product'.enter('Big Bag (BB01)')
      'Quantity'.enter('40')
    'Add another line'.click()
      'Product'.enter('Cap (C01)')
      'Quantity'.enter('40')
      'OK'.click()
    'OK'.click()
  'Back'.click()
'Receive Purchases'.click()
  'mainTable./PO-GEN-01/.Enter Receipt'.click()
    'Lines./Big Bag (BB01)/.Received'.enter('30')
    'Lines./Cap (C01)/.Received'.enter('30')
    'OK'.click()
  'Back'.click()
'Sales and Invoices'.click() //'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Ajax', customer: 'Johnny Appleseed'}); 'helper'.addWCOrderItem({product: 'Cap (C01)', quantity: 100, unitPrice: 200});
  'Preorders'.click()
    'mainTable'.shouldHaveCount(3)
    'mainTable./PR00001/.Edit'.click()
      'Convert to WC Order'.click()
        'messageDialogText'.shouldEqual("Are you sure you want to convert this Preorder to a WC order?", 'doc')
        'No'.click('doc')
      'Convert to WC Order'.click()
        'Yes'.click('doc')
        'messageDialogText'.shouldEqual("New WC Order was created", 'doc')
        'OK'.click('doc')
    'Preorders'.shouldBeCurrentPage()
    'mainTable'.shouldHaveCount(2)
    'Back'.click()
  'Back'.click()
'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Boral', customer: 'Customer Andrews'})
'helper'.addWCOrderItem({product: 'Cap (C01)', quantity: 100, unitPrice: 200})
'Sales and Invoices'.click() //'helper'.addWCOrder({product: 'Big Bag (BB01)', quantity: 100, unitPrice: 200, orderDate: global.todayLocal(), status: 'wc-processing', company: 'Centrelink', customer: 'Kevin Costly'}); 'helper'.addWCOrderItem({product: 'Cap (C01)', quantity: 100, unitPrice: 200})
  'Preorders'.click()
    'mainTable'.shouldHaveCount(2)
    'mainTable./PR00002/.Edit'.click()
      'Convert to WC Order'.click()
        'Yes'.click('doc')
        'messageDialogText'.shouldEqual("New WC Order was created", 'doc')
        'OK'.click('doc')
    'Preorders'.shouldBeCurrentPage()
    'mainTable'.shouldHaveCount(1)
    'Back'.click()
  'Back'.click()
'helper'.simulateBrowserRefresh() // so that order._order_totals are correct
'stocktend_fulfillment'.click()
  'mainTable'.shouldHaveCount(3)
  'mainTable./Johnny Appleseed, Fester Inc/.Finance Status'.shouldEqual('Financed')
  'mainTable./Warehouse of Boral/.Finance Status'.shouldEqual('Unfinanced')
  'mainTable./Kevin Costly, Fester Inc/.Finance Status'.shouldEqual('Partially Financed')
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Kevin Costly/.Account'.click()
    'mainTable.0.Trash'.click()
    'mainTable.0.Really Trash?'.click()
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'mainTable./Kevin Costly, Fester Inc/.Finance Status'.shouldEqual('Partially Financed')
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Kevin Costly/.Account'.click()
    'Customer AR Details'.click()
      'Credit Limit'.enter('0')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'mainTable./Kevin Costly, Fester Inc/.Finance Status'.shouldEqual('Unfinanced')
  'Allocate'.click()
    'Allocate Inventory to Sales Orders'.shouldBeCurrentPage()
    'mainTable./Big Bag (BB01)/.Allocate'.click()
      'Lines./Johnny Appleseed, Fester Inc/.Allocate %'.enter('60')
      'Lines./Warehouse of Boral/.Allocate %'.enter('40')
      'OK'.click()
    'mainTable./Cap (C01)/.Allocate'.click()
      'Lines./Johnny Appleseed, Fester Inc/.Allocate %'.enter('50')
      'Lines./Warehouse of Boral/.Allocate %'.enter('30')
      'Lines./Kevin Costly, Fester Inc/.Allocate %'.enter('20')
      'OK'.click()
    'Back'.click()
  'mainTable./Johnny Appleseed, Fester Inc/.Edit'.click()
    'Lines./Big Bag (BB01)/.Quantity Shipped'.enter('18')
    'Lines./Cap (C01)/.Quantity Shipped'.enter('15')
    'OK'.click()
  'mainTable./Warehouse of Boral/.Edit'.click()
    'Lines./Big Bag (BB01)/.Quantity Shipped'.enter('12')
    'Lines./Cap (C01)/.Quantity Shipped'.enter('9')
    'OK'.click()
  'mainTable./Kevin Costly, Fester Inc/.Edit'.click()
    'Lines./Cap (C01)/.Quantity Shipped'.enter('5')
    'OK'.click()
  'Allocate'.click()
    'mainTable./Cap (C01)/.Allocate'.click()
      'Lines./Warehouse of Boral/.Allocate %'.enter(0)
      'Lines./Johnny Appleseed, Fester Inc/.Allocate %'.enter(0)
      'Lines./Kevin Costly, Fester Inc/.Allocate %'.enter(100)
      'OK'.click()
    'Back'.click()
  'mainTable./Kevin Costly, Fester Inc/.Edit'.click()
    'Lines./Cap (C01)/.Quantity Shipped'.enter('6')
    'OK'.click()
  'View Shipments'.click()
    'mainTable./Warehouse of Boral/.Edit'.click()
      'Invoiced'.enter('Yes')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Customer Andrews/.AR Balance'.shouldEqual('-4,200.04')
  'mainTable./Customer Andrews/.Account'.click()
    'mainTable'.shouldHaveCount(1)
    'Back'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Balance'.shouldEqual('5,000.00')
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'View Shipments'.click()
    'mainTable./Johnny Appleseed, Fester Inc/.Edit'.click()
      'Invoiced'.enter('Yes')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'mainTable'.shouldHaveCount(2)
    'Balance'.shouldEqual('-1,605.07')
    'mainTable./Invoice/.Amount'.shouldEqual('-6,605.07')
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'mainTable./Johnny Appleseed, Fester Inc/.Finance Status'.shouldEqual('Financed')
  'View Shipments'.click()
    'mainTable./Johnny Appleseed, Fester Inc/.Edit'.click()
      'Invoiced'.enter('No')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Customer AR Details'.click()
      'Credit Limit'.enter('0')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'mainTable./Johnny Appleseed, Fester Inc/.Finance Status'.shouldEqual('Partially Financed')
  'View Shipments'.click()
    'mainTable./Johnny Appleseed, Fester Inc/.Edit'.click()
      'Invoiced'.enter('No')
      'OK'.click()
    'Back'.click()
  'Back'.click()
'stocktend_customers'.click()
  'mainTable./Johnny Appleseed/.Account'.click()
    'Balance'.shouldEqual('5,000.00')
    'mainTable./Invoice/.Amount'.shouldEqual('0.00')
    'Back'.click()
  'Back'.click()
'stocktend_fulfillment'.click()
  'mainTable./Johnny Appleseed, Fester Inc/.Finance Status'.shouldEqual('Partially Financed')
  'Back'.click()
